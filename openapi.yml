openapi: 3.0.0
info:
  title: AMAVM VDH API
  description: |
    AMAVM VDH API
  version: 1.0.9999
tags:
  - name: Api
    description: Operations related to general API operations
  - name: Bicycle Paths
    description: Operations related to Bicycle Paths
paths:
  /info:
    get:
      summary: 'Get general api information, like the exact version.'
      tags:
        - Api
      responses:
        '200':
          description: The Api information
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                type: object
                description: Information about the API.
                required:
                  - name
                  - environment
                  - version
                properties:
                  name:
                    type: string
                    description: The name of the API.
                  environment:
                    type: string
                    description: The name of the environment.
                  version:
                    type: string
                    description: >
                      The exact version of the deployed api. Recommendation is
                      to follow the SemVer 2.0 specification
                      (http://semver.org/)
                  timestamp:
                    type: string
                    format: date-time
                    description: The last deployment date and time
        5XX:
          $ref: '#/components/responses/internalServerError'
  /api/health:
    get:
      summary: Get health and self-diagnostic information.
      tags:
        - Api
      responses:
        '200':
          description: The system is healthy.
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
        '400':
          description: The system is healthy.
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
        5XX:
          description: The health checks failed.
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckResult'
                
  /api/v1/bicycle-paths:
    get:
      summary: Retrieve the list of bicycle paths
      tags:
        - Bicycle Paths
      parameters:
        - name: bbox
          description: The bounding box to restrict for position
          in: query
          schema:
            type: array
            items:
              type: number
            minimum: 8
            maximum: 8
          style: form
          explode: false
        - name: near
          description: A single coordinate to indicate center position
          in: query
          schema:
            type: array
            items:
              type: number
            minimum: 2
            maximum: 2
          style: form
          explode: false
        - name: nextToken
          description: The continuation token for next results
          in: query
          schema:
            type: string
      responses:
        '200':
          description: The list of bicycle paths
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                type: object
                properties:
                  items:
                    type: array
                    items:
                      $ref: '#/components/schemas/BicyclePath'
                  nextToken:
                    type: string
                required:
                  - items
        5XX:
          $ref: '#/components/responses/internalServerError'
  /api/v1/bicycle-paths/{bicyclePathId}/observations/snow-removal:
    post:
      summary: Post a new observation about snow removal
      tags:
        - Bicycle Paths
      parameters:
        - name: bicyclePathId
          description: The id of the bicycle path.
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The updated bicycle path
          headers:
            x-amzn-RequestId:
              $ref: '#/components/headers/x-amzn-RequestId'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BicyclePath'
        '400':
          $ref: '#/components/responses/badRequest'
        '404':
          $ref: '#/components/responses/notfound'
        5XX:
          $ref: '#/components/responses/internalServerError'
components:
  headers:
    x-amzn-RequestId:
      description: The request id that uniquely identifies this request.
      schema:
        type: string
  responses:
    internalServerError:
      description: Server error - something went wrong.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    unauthorized:
      description: >
        Access has been denied because the user does not have the necessary
        priviledges to call the endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    forbidden:
      description: >
        Access has been denied because the user does not have the necessary
        priviledges to call the endpoint.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    notfound:
      description: The requested item or item to update was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    badRequest:
      description: The request is invalid.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  schemas:
    ErrorResponse:
      type: object
      description: Standard error response message.
      required:
        - error
      properties:
        error:
          $ref: '#/components/schemas/Error'
    Error:
      type: object
      description: Information about an error.
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: One of a server-defined set of error codes.
          enum:
            - internalServerError
            - notFound
            - goneError
            - badRequest
            - validationError
            - configurationError
            - dependencyError
        message:
          type: string
          description: A human-readable representation of the error.
        target:
          type: string
          description: The target of the error.
        details:
          type: array
          items:
            $ref: '#/components/schemas/Error'
          description: >
            An array of details about specific errors that led to this reported
            error.
        innererror:
          $ref: '#/components/schemas/InnerError'
    InnerError:
      type: object
      description: More details about an error.
      properties:
        code:
          type: string
          description: >-
            A more specific error code than was provided by the containing
            error.
        innererror:
          type: object
          description: >
            An object containing more specific information than the current
            object about the error.
    HealthCheckResult:
      type: object
      description: Health check result (recursive)
      required:
        - name
        - status
        - elapsed
      properties:
        name:
          type: string
          description: The health check name.
        target:
          type: string
          description: 'An indication of the system targeted for the health check, if any.'
        status:
          type: string
          description: The status of the health check
          enum:
            - Inconclusive
            - Ok
            - Warning
            - Error
        error:
          type: object
          description: Description of the error that has occured.
        elapsed:
          type: number
          description: The number of milliseconds taken by the health check verification.
        children:
          type: array
          description: 'Sub health checks, if any.'
          items:
            $ref: '#/components/schemas/HealthCheckResult'
    BicyclePath:
      description: A bicycle path.
      type: object
      properties:
        borough:
          description: The name of the borough.
          type: string
        divider:
          description: The divider type.
          enum:
            - C
            - D
            - J
            - M
            - P
          type: string
        geometry:
          $ref: '#/components/schemas/GeoJSON.MultiLineString'
          description: The GeoJson geometry.
        id:
          description: Unique id for the bicycle path
          type: string
        length:
          description: The length in meters
          type: number
        numberOfLanes:
          description: The number of lanes
          type: number
        status:
          type: object
          properties:
            snowRemoval:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/BicyclePathSnowRemovalStatus'
                timestamp:
                  type: number
              additionalProperties: false
              required:
                - status
          additionalProperties: false
          required:
            - snowRemoval
        type:
          $ref: '#/components/schemas/BicyclePathType'
          description: The type of bicycle path
      additionalProperties: false
      required:
        - borough
        - geometry
        - id
        - length
        - numberOfLanes
        - status
        - type
    BicyclePathDivider:
      enum:
        - C
        - D
        - J
        - M
        - P
      type: string
    BicyclePathSnowRemovalStatus:
      enum:
        - clean
        - full
        - partially
        - unknown
      type: string
    BicyclePathType:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
      type: number
    BicyclePathsRequest:
      type: object
      properties:
        bbox:
          type: array
          items:
            type: number
        near:
          type: array
          items:
            type: number
        nextToken:
          description: The next continuation token.
          type: string
      additionalProperties: false
    GeoJSON.MultiLineString:
      description: |-
        MultiLineString geometry object.
        https://tools.ietf.org/html/rfc7946#section-3.1.5
      type: object
      properties:
        type:
          description: Specifies the type of GeoJSON object.
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              items:
                type: number

      additionalProperties: false
      required:
        - coordinates
        - type
